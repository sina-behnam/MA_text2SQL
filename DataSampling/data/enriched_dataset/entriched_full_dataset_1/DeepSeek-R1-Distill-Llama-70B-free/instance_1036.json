{
  "id": 1036,
  "dataset": "bird",
  "database": {
    "name": "european_football_2",
    "path": [
      "stratified_output/databases/european_football_2/european_football_2.sqlite"
    ],
    "csv_files": [
      "stratified_output/databases/european_football_2/Team_Attributes.csv",
      "stratified_output/databases/european_football_2/Player.csv",
      "stratified_output/databases/european_football_2/Match.csv",
      "stratified_output/databases/european_football_2/League.csv",
      "stratified_output/databases/european_football_2/Country.csv",
      "stratified_output/databases/european_football_2/Player_Attributes.csv",
      "stratified_output/databases/european_football_2/Team.csv"
    ],
    "type": "sqlite"
  },
  "schemas": {
    "name": "european_football_2",
    "path": [
      "stratified_output/schemas/european_football_2/european_football_2.csv"
    ],
    "type": "csv"
  },
  "question": "List the long name of teams with above-average build-up play passing in 2012.",
  "sql": "SELECT DISTINCT t4.team_long_name FROM Team_Attributes AS t3 INNER JOIN Team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTR(t3.`date`, 1, 4) = '2012' AND t3.buildUpPlayPassing > ( SELECT CAST(SUM(t2.buildUpPlayPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE STRFTIME('%Y',t2.`date`) = '2012')",
  "evidence": "long name of teams refers to team_long_name; build-up play passing refers to buildUpPlayPassing; above-average build-up play passing = buildUpPlayPassing > DIVIDE(SUM(buildUpPlayPassing), COUNT(team_long_name) WHERE buildUpPlayPassing IS NOT NULL); in 2012 refers to strftime('%Y', date) = '2012'; ",
  "difficulty": "challenging",
  "question_analysis": {
    "char_length": 77,
    "word_length": 15,
    "entities": [
      {
        "text": "2012",
        "label": "DATE",
        "start": 72,
        "end": 76
      }
    ],
    "entity_types": [
      "DATE"
    ],
    "has_entities": true,
    "numbers": [
      "2012"
    ],
    "has_numbers": true,
    "has_negation": false,
    "negation_words": [],
    "comparatives": [],
    "has_comparatives": false,
    "superlatives": [],
    "has_superlatives": false,
    "table_overlap_count": 0,
    "table_overlap_lemma_count": 1,
    "column_overlap_count": 0,
    "column_overlap_lemma_count": 0
  },
  "sql_analysis": {
    "char_length": 374,
    "tables_count": 2,
    "tables": [
      "Team_Attributes",
      "Team"
    ],
    "join_count": 2,
    "where_conditions": 2,
    "subquery_count": 1,
    "clauses_count": 0,
    "clause_types": [],
    "aggregation_function_count": 2,
    "aggregation_functions": [
      "COUNT",
      "SUM"
    ],
    "select_columns": 1
  },
  "inference_results": {
    "has_prediction": true,
    "model": {
      "model_name": "deepseek-ai/DeepSeek-R1-Distill-Llama-70B-free",
      "model_type": "together_ai",
      "timestamp": "2025-05-10T13:34:15.119363"
    },
    "predicted_output": {
      "generated_sql": "SELECT T.team_long_name\nFROM Team T\nINNER JOIN Team_Attributes TA\nON T.team_api_id = TA.team_api_id\nWHERE TA.date LIKE '2012-%'\nAND TA.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE date LIKE '2012-%');",
      "execution_correct": false,
      "execution_error": "Results have different shapes: ground truth (128, 1) vs predicted (129, 1)",
      "exact_match": false,
      "semantic_equivalent": false,
      "semantic_explanation": "Execution failed: Results have different shapes: ground truth (128, 1) vs predicted (129, 1)"
    }
  }
}